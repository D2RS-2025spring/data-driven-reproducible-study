# 分组数据统计分析和可视化

## 分析体系架构

本教程将从数据复杂度递进的角度，系统介绍不同场景下的统计分析方法：

| 分析层次       | 使用场景                   | 参数方法          | 非参数方法          |
|----------------|---------------------------|-------------------|---------------------|
| **单组数据**   | 样本与参考值比较           | 单样本t检验       | 单样本Wilcoxon符号检验 |
| **两组比较**   | 组间均值比较               | 独立样本t检验     | Wilcoxon秩和检验    |
| **配对设计**   | 同一对象不同处理比较       | 配对t检验         | Wilcoxon符号秩检验  |
| **多组比较**   | 多个组别比较               | 方差分析(ANOVA)   | Kruskal-Wallis检验  |
| **相关分析**   | 变量关联性研究             | Pearson相关系数   | Spearman相关系数    |
| **多变量分析** | 多个变量间的关系研究       | MANOVA, RDA, CCA  | Mantel检验, PERMANOVA |

### 适用性差异

参数方法和非参数方法的适用性主要区别在于 **数据分布假设**、**样本量要求** 和 **统计效率**。  

#### 1. 数据分布假设

- **参数方法** 假设数据符合某种特定分布（如正态分布）。例如，t 检验和 ANOVA 假设数据是正态分布的，Pearson 相关假设变量是线性相关的。  
- **非参数方法** **不依赖特定分布假设**，适用于数据分布未知或非正态的情况。例如，Wilcoxon 检验和 Kruskal-Wallis 检验无需正态性假设，Spearman 相关适用于非线性关系。  

#### 2. 样本量要求

- **参数方法** 在 **小样本（n < 30）** 时，对正态性假设较敏感；但在 **大样本（n > 30）** 时，根据 **中心极限定理**，数据往往趋于正态分布，因此适用范围更广。  
- **非参数方法** 适用于 **小样本**，因为它基于数据的秩（排名）而非原始值，不受分布影响。但在大样本时，可能 **比参数方法的统计效率低**。  

#### 3. 统计效率

- **参数方法** 在满足假设的情况下 **更高效**，因为它利用了数据的全部信息（如均值和方差）。  
- **非参数方法** 由于仅依赖秩次，信息利用较少，因此在大样本时统计效能（power）通常低于参数方法。  

#### 4. 适用场景

| **分析类型**   | **参数方法适用情况**                                | **非参数方法适用情况**                          |  
|---------------|--------------------------------------------------|----------------------------------------------|  
| **单组数据**   | 样本量较大，且数据正态分布                      | 小样本，数据偏态或包含离群值                    |  
| **两组比较**   | 组间数据正态，方差齐性                         | 组间分布偏态或含异常值                        |  
| **配对设计**   | 数据正态，测量误差小                           | 配对数据非正态或有明显离群点                  |  
| **多组比较**   | 组间数据正态，方差相等                         | 组间数据分布不同或存在异方差                   |  
| **相关分析**   | 线性关系，数据正态                             | 变量关系可能是非线性，数据偏态                   |  
| **多变量分析** | 变量正态、线性关系                             | 变量不正态、非线性关系，数据存在高维结构          |  

#### 总结

- **优先使用参数方法**，如果数据符合分布假设，统计效能更高。  
- **使用非参数方法**，如果数据不符合正态性、方差齐性假设，或者数据包含异常值。  
- **当样本量较小时**，非参数方法往往更稳健。  
- **当关系是非线性的**，如变量间的非线性相关性分析，应使用非参数方法（Spearman）。  

这样可以根据实际情况选择合适的方法，保证统计分析的合理性。

## 单样本 T 检验

使用 `ToothGrowth` 数据集演示单样本 t 检验。

```{r}
library(tidyverse)
library(ggpubr)
library(showtext)
theme_set(theme_bw())

# 显示中文
showtext::showtext.auto()

# 示例数据集加载
data("ToothGrowth")
```

### 数据特性

`ToothGrowth` 数据集记录豚鼠牙齿在不同剂量维生素C（VC）和橙汁（OJ）补充下的生长情况，主要变量包括：

| 变量名 | 类型   | 描述                    | 取值范围            | 39 |
|--------|--------|-------------------------|---------------------|
| len    | 数值型 | 牙齿长度（单位：毫米）  | 4.2 - 33.9          |
| supp   | 因子型 | 补充剂类型              | VC（抗坏血酸）/OJ（橙汁） |
| dose   | 数值型 | 每日剂量（单位：毫克）  | 0.5 / 1.0 / 2.0     |


1. **分组设计**：包含两种补充类型的3个剂量水平，构成2×3因子设计
2. **平衡性**：每个处理组合包含10只豚鼠，共计60个观测值
3. **研究意义**：验证不同剂量的维生素C补充对牙齿生长的影响

```{r}
# 数据概览
cat("数据集维度:", dim(ToothGrowth), "\n")
cat("剂量分组统计:\n")
print(table(ToothGrowth$supp, ToothGrowth$dose))

# 绘制分组分布图
ggplot(ToothGrowth, aes(x = factor(dose), fill = supp)) +
    geom_bar(position = "dodge") +
    labs(x = "剂量（毫克/天）", y = "样本数量",
         title = "实验设计结构") +
    scale_fill_brewer(palette = "Set2")
```


### 单样本正态性检验与参数选择

```{r}
# 整体数据正态性检验
shapiro_total = shapiro.test(ToothGrowth$len)

# 评估参数检验适用性
if(shapiro_total$p.value > 0.05) {
    cat("\n→ 数据符合正态分布（p >0.05），可以采用参数检验方法。\n")
} else {
    cat("\n→ 数据偏离正态分布（p ≤0.05），建议优先使用非参数方法。\n")
}

# 结果可视化
ggqqplot(ToothGrowth, "len") +
    labs(title = "Q-Q正态性检验图",
         subtitle = paste("总体验证: W =", round(shapiro_total$statistic,3),
                         "p =", round(shapiro_total$p.value,3))) +
    theme(legend.position = "none")
```

### 应用检验

当我们需要将样本均值与参考值进行比较时：

```{r}
# 设置理论参考值（可根据实际研究设定）
reference_value = 18

# 单样本t检验
t_one_sample = t.test(ToothGrowth$len, mu = reference_value)

# 结果可视化
ggplot(ToothGrowth, aes(x = factor(1), y = len)) +
    geom_violin(fill = "lightblue") +
    geom_boxplot(width = 0.1) +
    geom_hline(yintercept = reference_value, color = "red",
               linetype = "dashed", linewidth = 1) +
    annotate("text", x = 0.8, y = reference_value + 1,
             label = paste("参考值 =", reference_value),
             color = "red", size = 4) +
    labs(x = NULL, y = "牙齿长度",
         title = "单样本均值比较",
         subtitle = paste("t(", t_one_sample$parameter, ") =",
                          round(t_one_sample$statistic, 2),
                         "p =", round(t_one_sample$p.value, 3)))
```

### 是否有问题？

```{r}
# 分组正态性检验
shapiro_OJ = shapiro.test(ToothGrowth$len[ToothGrowth$supp == "OJ"])
shapiro_VC = shapiro.test(ToothGrowth$len[ToothGrowth$supp == "VC"])

# 结果显示
cat("### 正态性检验结果：\n")
cat("1. 总体检验: W =", round(shapiro_total$statistic,3),
    "p =", round(shapiro_total$p.value,3), "\n")
cat("2. OJ组检验: W =", round(shapiro_OJ$statistic,3),
    "p =", round(shapiro_OJ$p.value,3), "\n")
cat("3. VC组检验: W =", round(shapiro_VC$statistic,3),
    "p =", round(shapiro_VC$p.value,3), "\n")
```


## 单样本 Wilcoxon 符号检验

可以使用 `ToothGrowth` 数据集中的 `len`（牙齿生长长度）变量，假设总体均值为 18，进行 **单样本 Wilcoxon 符号检验**。  

### 代码示例

```{r}
# 加载数据集
data("ToothGrowth")

# 设定假设检验
# H0: 牙齿生长的中位数等于 18
# H1: 牙齿生长的中位数不等于 18
wilcox.test(ToothGrowth$len, mu = 18, alternative = "two.sided")
```

### 结果解读

- `V` 值是 Wilcoxon 符号检验统计量。  
- `p-value` 用于判断显著性，若 p < 0.05，则拒绝原假设，说明牙齿生长的中位数显著不同于 18。  
- `alternative` 设置为 `"two.sided"` 进行双侧检验，也可以改为 `"greater"` 或 `"less"` 进行单侧检验。  

### 可视化

```{r}
library(ggplot2)

ggplot(ToothGrowth, aes(x = len)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "black", alpha = 0.7) +
  geom_vline(xintercept = 18, linetype = "dashed", color = "red", linewidth = 1) +
  labs(title = "牙齿生长长度分布",
       x = "长度",
       y = "频数")
```

这段代码绘制了 `len` 的直方图，并用红色虚线标出假设的中位数 15。

## 独立样本 T 检验

```{r}
library(tidyverse)

# 加载数据集
data("ToothGrowth")

# 可视化
ggplot(ToothGrowth, aes(x = supp, y = len, fill = supp)) +
    geom_boxplot() +
    geom_jitter(width = 0.2, alpha = 0.5) +
    labs(
        title = "Tooth Growth Analysis",
        x = "Supplement",
        y = "Tooth Length"
    ) +
    theme(legend.position = "none")
```


```{r}
# 正态性检验
shapiro_OJ = shapiro.test(ToothGrowth$len[ToothGrowth$supp == "OJ"])
shapiro_VC = shapiro.test(ToothGrowth$len[ToothGrowth$supp == "VC"])

# 方差齐性检验
var_test = var.test(len ~ supp, data = ToothGrowth)

# 显示检验结果
cat("\nNormality Test Results:\n")
cat("OJ group: W =", round(shapiro_OJ$statistic, 3), 
    ", p =", round(shapiro_OJ$p.value, 3), "\n")
cat("VC group: W =", round(shapiro_VC$statistic, 3),
    ", p =", round(shapiro_VC$p.value, 3), "\n")
cat("\nVariance Homogeneity Test Results:\n")
print(var_test)
```

```{r}
# 进行 t 检验
t_result = t.test(len ~ supp, data = ToothGrowth)

# 显示结果
print(t_result)
```


### 结果可视化

可以使用 `ggpubr` 进行 **独立样本 t 检验**，并在图中显示显著性（p 值）。`ToothGrowth` 数据集包含 `supp`（补充剂类型）和 `len`（牙齿生长长度），我们可以检验两种补充剂（`VC` 和 `OJ`）之间的均值差异。  

#### 代码示例

```{r}
# 加载必要的包
library(ggpubr)

# 绘制箱线图并添加 t 检验结果
ggboxplot(ToothGrowth, x = "supp", y = "len", 
          color = "supp", palette = "jco") +
  stat_compare_means(method = "t.test", label = "p.format") +
  labs(title = "OJ vs. VC 补充剂对牙齿生长的影响",
       x = "补充剂类型",
       y = "牙齿生长长度")
```

#### 解释

1. `ggboxplot()`：绘制按 `supp` 分组的箱线图，并用 `color` 区分类别。  
2. `stat_compare_means(method = "t.test", label = "p.format")`：
   - `t.test` 进行独立样本 t 检验。  
   - `p.format` 显示 p 值。  
3. `labs()` 添加标题和轴标签。  

运行代码后，箱线图会显示两组数据的分布，并在图上标注 t 检验的 p 值，方便判断两种补充剂是否有显著性差异。

## Wilcoxon 秩和检验

可以使用 `ggpubr` 进行 **Wilcoxon 秩和检验**（Mann-Whitney U 检验），并在图中显示显著性（p 值）。以下是基于 `ToothGrowth` 数据集的示例，比较 `supp`（补充剂类型）对 `len`（牙齿生长长度）的影响。  

#### 代码示例

```{r}
# 加载必要的包
library(ggpubr)

# 绘制箱线图并添加 Wilcoxon 秩和检验结果
ggboxplot(ToothGrowth, x = "supp", y = "len", 
          color = "supp", palette = "jco") +
  stat_compare_means(method = "wilcox.test", label = "p.format") +
  labs(title = "OJ vs. VC 补充剂对牙齿生长的影响（Wilcoxon 检验）",
       x = "补充剂类型",
       y = "牙齿生长长度")
```

#### 代码解释

1. **`ggboxplot()`**：绘制分组箱线图，并使用 `color` 区分类别。  
2. **`stat_compare_means(method = "wilcox.test", label = "p.format")`**：
   - `wilcox.test` 进行 **Wilcoxon 秩和检验**（Mann-Whitney U 检验）。  
   - `p.format` 以格式化方式显示 p 值。  
3. **`labs()`**：设置图表标题和坐标轴标签。  

运行代码后，图上会显示两种补充剂对牙齿生长的影响，并标注 Wilcoxon 秩和检验的 p 值，以判断组间差异是否显著。

#### 方法的选择

```{r}
# 正态性检验
shapiro_OJ = shapiro.test(ToothGrowth$len[ToothGrowth$supp == "OJ"])
shapiro_VC = shapiro.test(ToothGrowth$len[ToothGrowth$supp == "VC"])

# 方差齐性检验
var_test = var.test(len ~ supp, data = ToothGrowth)

# 检验结果整合
assumptions_met = shapiro_OJ$p.value > 0.05 &
                shapiro_VC$p.value > 0.05 &
                var_test$p.value > 0.05

# 方法选择建议
if (assumptions_met) {
    cat("\n\n由于数据满足参数假设，t检验更为敏感高效")
} else {
    cat("\n\n由于违反参数假设，Wilcoxon检验结果更为可靠")
}
```

## 配对 t 检验

使用 `sleep` 数据集进行 **配对 t 检验**，并使用 `ggpubr` 可视化分析结果。  

### 数据集简介

`sleep` 数据集包含 10 名受试者在两种不同药物 (`group` 变量) 下的额外睡眠时间 (`extra` 变量)。  
我们可以检验 **两种药物是否导致的睡眠时间有显著差异**。  


### 进行配对 t 检验

```{r}
# 加载数据集
data("sleep")

# 将数据按组拆分
group1 = sleep$extra[sleep$group == 1]  # 第一组数据
group2 = sleep$extra[sleep$group == 2]  # 第二组数据

# 进行配对 t 检验
t_test_result = t.test(group1, group2, paired = TRUE)

# 输出检验结果
print(t_test_result)
```

#### 解释

- `group1` 和 `group2` 是 **同一批受试者** 在 **两种药物下** 的睡眠时间。
- `t.test(group1, group2, paired = TRUE)` 进行 **配对 t 检验**，正确使用 `paired = TRUE`。


### 可视化

```{r}
# 加载必要的包
library(ggpubr)

# 绘制配对样本数据的箱线图 + 配对连线
ggpaired(sleep, x = "group", y = "extra",
         color = "group", line.color = "gray", line.size = 0.5,
         palette = "jco") +
  stat_compare_means(method = "t.test", paired = TRUE, label = "p.format") +
  labs(title = "两种药物对睡眠时间的影响（配对 t 检验）",
       x = "药物组",
       y = "额外睡眠时间")
```

#### 结果解读

- `p-value < 0.05` 说明两种药物在 **睡眠时间上的影响显著不同**。
- **箱线图** 直观显示 **睡眠时间的分布**，灰色连线表示相同受试者在不同药物下的数据。

这样即可完成 **配对 t 检验的正确实现和可视化**。


## Wilcoxon 符号秩检验

可以使用 `sleep` 数据集进行 **Wilcoxon 符号秩检验**（配对 Wilcoxon 检验），并使用 `ggpubr` 进行可视化。  


### **1. 进行 Wilcoxon 符号秩检验**

```{r}
# 加载数据集
data("sleep")

# 将数据按组拆分
group1 = sleep$extra[sleep$group == 1]  # 第一组数据
group2 = sleep$extra[sleep$group == 2]  # 第二组数据

# 进行 Wilcoxon 符号秩检验（配对检验）
wilcox_test_result = wilcox.test(group1, group2, paired = TRUE)

# 输出检验结果
print(wilcox_test_result)
```

### **解释**

- `group1` 和 `group2` 是 **同一批受试者** 在 **两种药物下** 的睡眠时间。  
- `wilcox.test(group1, group2, paired = TRUE)` 进行 **配对 Wilcoxon 符号秩检验**，适用于 **非正态分布数据**。  
- 观察 `p-value`，若 **p < 0.05**，说明 **两种药物对睡眠时间的影响存在显著差异**。  



### **2. 进行可视化**

```{r}
# 加载必要的包
library(ggpubr)

# 绘制配对样本数据的箱线图 + 配对连线
ggpaired(sleep, x = "group", y = "extra",
         color = "group", line.color = "gray", line.size = 0.5,
         palette = "jco") +
  stat_compare_means(method = "wilcox.test", paired = TRUE, label = "p.format") +
  labs(title = "两种药物对睡眠时间的影响（Wilcoxon 符号秩检验）",
       x = "药物组",
       y = "额外睡眠时间")
```

### **解释**

1. `ggpaired()`：
   - **绘制配对数据的箱线图**，颜色区分组别。  
   - **灰色连线** 连接相同受试者在两种药物条件下的测量值。  
2. `stat_compare_means(method = "wilcox.test", paired = TRUE, label = "p.format")`：
   - **Wilcoxon 符号秩检验**，适用于非参数数据。  
   - **`p.format`** 格式化显示 p 值。  
3. `labs()` 设置标题和坐标轴标签。  


### **3. 结果解读**

- **p < 0.05**：说明两种药物对睡眠时间的影响 **存在显著性差异**。  
- **箱线图** 直观比较 **两种药物的睡眠时间分布**，灰色连线显示配对关系，帮助观察个体变化趋势。  

这样即可完成 **Wilcoxon 符号秩检验的分析和可视化**。

## 方差分析(ANOVA)

```{r}
# 加载必要的包
library(ggpubr)

# 加载数据集并筛选 VC 处理的数据
data("ToothGrowth")
vc_data = subset(ToothGrowth, supp == "VC")

# 进行单因素方差分析 (ANOVA)
anova_result = aov(len ~ factor(dose), data = vc_data)

# 输出 ANOVA 结果
summary(anova_result)

# 可视化：箱线图 + 组间显著性
ggboxplot(vc_data, x = "dose", y = "len",
          color = "dose", palette = "jco") +
  stat_compare_means(method = "anova") +
  labs(title = "VC 处理下不同剂量对牙齿生长的影响（ANOVA）",
       x = "剂量",
       y = "牙齿长度")
```

### 解释

1. `ggboxplot()`：绘制不同剂量组的 **箱线图**，颜色区分组别。  
2. `stat_compare_means(method = "anova")`：执行 **ANOVA 检验**，并显示 **p 值**。  
3. `labs()`：添加图表标题和坐标轴标签。  


## Kruskal-Wallis 检验  

```{r}
# 进行 Kruskal-Wallis 检验
kruskal_result = kruskal.test(len ~ factor(dose), data = vc_data)

# 输出检验结果
print(kruskal_result)

# 可视化：箱线图 + 组间显著性
ggboxplot(vc_data, x = "dose", y = "len",
          color = "dose", palette = "jco") +
  stat_compare_means(method = "kruskal.test") +
  labs(title = "VC 处理下不同剂量对牙齿生长的影响（Kruskal-Wallis）",
       x = "剂量",
       y = "牙齿长度")
```

### 解释  

1. `kruskal.test(len ~ factor(dose), data = vc_data)`：执行 **Kruskal-Wallis 检验**，适用于非正态分布数据。  
2. `ggboxplot()`：绘制 **箱线图**，显示不同剂量的 `len` 分布情况。  
3. `stat_compare_means(method = "kruskal.test")`：执行 **Kruskal-Wallis 检验**，并在图中显示 **p 值**。  
4. 观察 **p < 0.05**，说明不同剂量的 `len` **存在显著性差异**。

## Pearson相关系数

```{r}
# 加载必要的包
library(ggpubr)

# 加载数据集
data("mtcars")

# 计算 Pearson 相关系数
pearson_cor = cor.test(mtcars$mpg, mtcars$hp, method = "pearson")

# 输出相关性结果
print(pearson_cor)
```

```{r}
# 可视化：散点图 + Pearson 相关系数
ggscatter(mtcars, x = "hp", y = "mpg",
          add = "reg.line", conf.int = TRUE,
          cor.coef = TRUE, cor.method = "pearson",
          color = "blue", shape = 16) +
  labs(title = "Pearson 相关性分析：马力 (hp) vs. 燃油效率 (mpg)",
       x = "马力 (hp)",
       y = "燃油效率 (mpg)")
```

### 解释

1. `cor.test(mtcars$mpg, mtcars$hp, method = "pearson")` 计算 Pearson 相关系数，适用于 **线性关系且正态分布的数据**。  
2. `ggscatter()` 绘制 **散点图**，添加 **回归线**、**置信区间**，并显示 Pearson 相关系数。  
3. 观察 `p-value` 和 `cor` 结果：
   - **p < 0.05** 说明相关性显著。  
   - **cor 值** 接近 ±1 表示强相关，接近 0 表示无相关。  


## Spearman相关系数  

```{r}
# 计算 Spearman 相关系数
spearman_cor = cor.test(mtcars$mpg, mtcars$hp, method = "spearman")

# 输出相关性结果
print(spearman_cor)
```

```{r}
# 可视化：散点图 + Spearman 相关系数
ggscatter(mtcars, x = "hp", y = "mpg",
          add = "reg.line", conf.int = TRUE,
          cor.coef = TRUE, cor.method = "spearman",
          color = "red", shape = 16) +
  labs(title = "Spearman 相关性分析：马力 (hp) vs. 燃油效率 (mpg)",
       x = "马力 (hp)",
       y = "燃油效率 (mpg)")
```

### 解释

1. `cor.test(mtcars$mpg, mtcars$hp, method = "spearman")` 计算 Spearman 相关系数，适用于 **非线性关系或非正态分布的数据**。  
2. `ggscatter()` 绘制 **散点图**，显示 Spearman 相关系数，适用于非线性数据分析。  
3. 观察 **p 值** 和 **cor 值** 解释相关性。  


### 总结

- **Pearson** 适用于 **线性关系**，要求数据服从 **正态分布**。  
- **Spearman** 适用于 **非线性关系**，对 **非正态数据更稳健**。  
- **可视化** 通过 **散点图 + 相关系数** 展示变量间关系。

## 多变量分析

以下是使用R语言内置数据集进行 MANOVA、RDA、CCA和PERMANOVA分析的示例代码及详细解释：


### MANOVA（多变量方差分析）

**数据集**：`iris`（R内置数据集）  
**生物学意义**：比较不同鸢尾花物种（setosa、versicolor、virginica）在萼片和花瓣形态特征上的差异。

```{r}
# 加载数据集
data(iris)

# 执行MANOVA：检验物种对多个形态特征的影响
manova_fit <- manova(
  cbind(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width) ~ Species, 
  data = iris
)

# 查看整体显著性（使用Pillai检验）
summary(manova_fit, test = "Pillai")
# 输出Pillai's trace统计量和p值，p < 0.05表示物种间存在显著差异

# 查看单变量ANOVA结果（每个特征的独立检验）
summary.aov(manova_fit)
# 输出每个形态特征的F值和p值，例如Petal.Length的差异最显著
```



### RDA（冗余分析）

**数据集**：`varespec`和`varechem`（`vegan`包）  
**生物学意义**：分析土壤化学性质（如pH、氮含量）如何影响植被群落组成。


```{r}
library(vegan)

# 加载数据
data(varespec)  # 植被物种多度数据
data(varechem)   # 土壤化学数据

# 数据预处理：对物种数据进行Hellinger转换（降低双零敏感性）
spe_hel <- decostand(varespec, method = "hellinger")

# 执行RDA：环境变量解释物种组成
rda_result <- rda(spe_hel ~ ., data = varechem)

# 查看模型摘要（约束轴解释的方差比例）
summary(rda_result)
# 例如，前两个RDA轴共解释30%的方差

# 检验模型显著性
anova(rda_result, permutations = 999)
# p < 0.05表示环境变量对物种组成有显著影响

# 可视化
plot(rda_result, display = c("sites", "bp"), scaling = 2)
# 箭头表示环境变量方向，点表示样方
```


### CCA（典型对应分析）

**数据集**：`dune`和`dune.env`（`vegan`包）  
**生物学意义**：探究土壤厚度（A1）和湿度（Moisture）对沙丘植物群落分布的影响。

```{r}
library(vegan)

# 加载数据
data(dune)      # 植物物种多度数据
data(dune.env)  # 环境变量数据

# 执行CCA：分析环境变量与物种的关系
cca_result <- cca(dune ~ A1 + Moisture, data = dune.env)

# 查看模型摘要（轴解释的方差比例）
summary(cca_result)
# 例如，CCA1解释15%的物种-环境关系

# 检验模型显著性
anova(cca_result, permutations = 999)
# p < 0.05表示环境变量对物种分布有显著影响

# 可视化
plot(cca_result, display = c("sites", "cn"))
# 箭头表示环境变量，点表示样方，物种标签默认隐藏
```



### PERMANOVA（非参数多变量方差分析）

**数据集**：`dune`和`dune.env`（`vegan`包）  
**生物学意义**：检验不同管理方式（Management）对沙丘植物群落组成的影响。

```{r}
library(vegan)

# 加载数据
data(dune)
data(dune.env)

# 计算Bray-Curtis距离矩阵
dist_dune <- vegdist(dune, method = "bray")

# 执行PERMANOVA（基于999次置换检验）
permanova_result <- adonis2(
  dist_dune ~ Management, 
  data = dune.env, 
  permutations = 999
)

# 查看结果
print(permanova_result)
# R²表示管理方式解释的方差比例，p < 0.05表示组间差异显著
```


### 关键区别与生物学解释

- **MANOVA**：检验分类变量（如物种）对多个连续变量的联合影响（如形态特征差异）。  
- **RDA**：约束排序，假设物种-环境关系为线性（如土壤养分梯度）。  
- **CCA**：对应排序，假设物种-环境关系为单峰（如湿度梯度下的物种最适分布）。  
- **PERMANOVA**：非参数检验组间群落差异（如管理方式对多样性的影响）。

通过上述分析，可深入理解生态数据中复杂的多变量关系。

## Mantel 分析

Mantel 分析用于比较 **两个距离矩阵之间的相关性**，在生态学研究中常用于分析 **群落结构与环境因子之间的关系**。这里我们使用 **vegan** 包中的 **dune**（植物群落数据）和 **dune.env**（环境数据）进行 Mantel 分析，并进行可视化。


### 加载必要的 R 包和数据 

```{r}
# 加载必要的 R 包
library(vegan)   # 生态数据分析
library(ggplot2) # 数据可视化
library(ggpubr)  # 增强 ggplot2
library(ape)     # 计算距离矩阵

# 加载 dune 物种丰度数据和 dune.env 环境数据
data("dune")       # 物种群落数据
data("dune.env")   # 环境因子数据
```


### 计算距离矩阵

```{r}
# 计算物种群落的 Bray-Curtis 距离矩阵
dune_dist = vegdist(dune, method = "bray")

# 计算环境变量的欧几里得距离矩阵
env_dist = dist(dune.env[, c("A1", "Moisture", "Management")])  # 选择部分环境变量
```

#### 解释

- `vegdist(dune, method = "bray")` 计算 **群落物种丰度的 Bray-Curtis 距离矩阵**，适用于生态数据。  
- `dist(dune.env[, c("A1", "Moisture", "Management")])` 计算 **环境因子的欧几里得距离矩阵**，选取 `A1`、`Moisture`、`Management` 变量。  


### 进行 Mantel 分析 

```{r}
# 进行 Mantel 检验
mantel_result = mantel(dune_dist, env_dist, method = "spearman", permutations = 999)

# 输出 Mantel 统计结果
print(mantel_result)
```

#### 解释

- `mantel(dune_dist, env_dist, method = "spearman", permutations = 999)`：
  - `method = "spearman"`：使用 **Spearman 相关性**（适用于非线性关系）。
  - `permutations = 999`：进行 **999 次置换检验**，评估显著性。  
- Mantel 结果的关键指标：
  - `Mantel statistic r`：表示两个矩阵之间的相关性（0 = 无关，接近 1 表示强相关）。
  - `Significance (p-value)`：若 **p < 0.05**，说明群落结构与环境因子显著相关。


### 可视化 Mantel 相关性 

```{r}
# 提取距离矩阵中的非对角元素
dune_values = as.vector(as.dist(dune_dist))
env_values = as.vector(as.dist(env_dist))

# 创建数据框
mantel_data = data.frame(Dune_Distance = dune_values, Env_Distance = env_values)

# 绘制散点图并添加拟合线
ggplot(mantel_data, aes(x = Env_Distance, y = Dune_Distance)) +
  geom_point(alpha = 0.6, color = "blue") +  # 绘制散点
  geom_smooth(method = "lm", color = "red", se = TRUE) +  # 添加线性拟合线
  labs(title = "Mantel 相关性分析",
       subtitle = paste("Mantel 统计量 r =", round(mantel_result$statistic, 3),
                        ", p =", mantel_result$signif),
       x = "环境因子距离",
       y = "物种群落距离")
```

#### 解释

1. `as.vector(as.dist(dune_dist))` 和 `as.vector(as.dist(env_dist))`：提取距离矩阵的 **非对角元素**，转换为向量。
2. `ggplot()` 可视化：
   - **散点图** (`geom_point()`)：展示群落距离 vs. 环境距离的关系。  
   - **线性拟合曲线** (`geom_smooth(method = "lm")`)：观察趋势，`se = TRUE` 表示 95% 置信区间。  
   - **标题显示 Mantel 统计量和 p 值**，直观了解相关性大小和显著性。


### Mantel 分析的生物学意义

#### 生态学背景

- **生态群落结构** 受 **环境因子**（如土壤湿度、养分、管理方式）影响。
- Mantel 检验评估 **环境梯度如何驱动群落变化**，可用于 **生物地理学、生态恢复、物种共存机制** 研究。

#### Mantel 结果解读

- **r > 0 & p < 0.05**：群落组成 **显著受环境因子影响**，环境因子可能驱动物种分布。  
- **r 近 0 & p > 0.05**：环境因子与群落 **无显著相关性**，说明可能受 **竞争、演替、历史过程等** 影响。  
- **r < 0**：环境因子可能具有 **负向影响**（如环境胁迫）。  


### 总结

1. **计算群落丰度和环境因子的距离矩阵**（Bray-Curtis vs. 欧几里得）。  
2. **Mantel 检验** 评估二者的相关性，并进行显著性检验。  
3. **可视化** 相关性，直观观察环境梯度对群落结构的影响。  
4. **生物学意义**：揭示环境因子如何驱动群落结构变化，指导生态管理与生物多样性保护。

## 详解 Mantel 检验

Mantel 统计量是一种用于分析两个距离矩阵之间相关性的统计方法，主要应用于生态学、遗传学等领域，来研究空间或环境变量与生物群落数据之间的关系。其核心原理如下：

### 距离矩阵的构建

- Mantel 检验的输入是两个对称距离矩阵（或相似性矩阵），它们分别表示：
  - 矩阵 $A$：变量之间的距离（如地理距离、环境差异）。
  - 矩阵 $B$：响应变量之间的距离（如群落组成差异、遗传差异）。

每个矩阵的元素 $a_{ij}$ 和 $b_{ij}$ 表示样本 $i$ 和 $j$ 之间的距离。


### 计算观察相关性

- Mantel 统计量通过以两个距离矩阵的**Pearson相关系数**表示，计算公式为：

$$
r = \frac{\sum_{i=1}^n \sum_{j=1}^n (a_{ij} - \bar{A})(b_{ij} - \bar{B})}{\sqrt{\sum_{i=1}^n \sum_{j=1}^n (a_{ij} - \bar{A})^2} \cdot \sqrt{\sum_{i=1}^n \sum_{j=1}^n (b_{ij} - \bar{B})^2}}
$$

其中：

- $a_{ij}$ 和 $b_{ij}$ 是两个矩阵中对应位的距离值。
- $\bar{A}$ 和 $\bar{B}$ 是矩阵的均值。


### 置换检验

为了评估相关性的显著性，Mantel 检验通过置换方法生成一个零分布：

1. 随机打乱一个矩阵（如$B$）的行和列。
2. 重新计算随机矩阵与未打乱矩阵之间的相关性。
3. 重复此过程（通常1000次或更多），得到一组随机相关系数。
4. 通过比较观察值 $r$ 与随机分布，计算P值，评估相关性的显著性。

### 应用场景

- **生态学**：分析环境因子（如气候、土壤性质）与生物群落组成的相关性。
- **遗传学**：研究地理距离与遗传距离的关系。
- **微生物组学**：评估环境变量对微生物群落结构的影响。

### 优缺点

- **优点**：
  - 可以分析高维数据。
  - 不要求数据符合正态分布。
  - 适用于非线性关系。
- **缺点**：
  - 对距离矩阵的选择敏感（如欧几里得距离、Bray-Curtis距离）
  - 对于复杂非线性关系，可能无法充分捕捉。

